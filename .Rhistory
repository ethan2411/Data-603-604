"",
paste(sprintf(" %+.6f*%s ",
rounded_coefficients[-1],
names(rounded_coefficients[-1])),
collapse="")
)
# Convert the formula string into a formula object
formula_with_rounded_coefficients <- as.formula(formula_str)
# Print the formula
print(formula_with_rounded_coefficients)
cancer.lm <- lm(CANCER_CrudePrev ~ ., data = cancer.pred.only)
summary(cancer.lm)
#removing ACCESS2_CrudePrev since not statistically significant
cancer.reduced <- lm(CANCER_CrudePrev ~ BPMED_CrudePrev + CHECKUP_CrudePrev + CHOLSCREEN_CrudePrev + COLON_SCREEN_CrudePrev + COREM_CrudePrev + COREW_CrudePrev  + DENTAL_CrudePrev + PAPTEST_CrudePrev + TEETHLOST_CrudePrev, data = df.unhealthy.precitors)
summary(cancer.reduced)
anova(cancer.lm, cancer.reduced)
cancer.interactions <- lm(CANCER_CrudePrev ~ (BPMED_CrudePrev + CHECKUP_CrudePrev + CHOLSCREEN_CrudePrev + COLON_SCREEN_CrudePrev + COREM_CrudePrev + COREW_CrudePrev  + DENTAL_CrudePrev + PAPTEST_CrudePrev + TEETHLOST_CrudePrev)^2, data = df.unhealthy.precitors)
summary(cancer.interactions)
library(olsrr)
df = read.csv('https://raw.githubusercontent.com/ethan2411/Data-603-604/main/500_Cities__Census_Tract-level_Data__GIS_Friendly_Format___2019_release_20231106.csv')
head(df)
#removing all data but the "prevalence" measures for calculations.
#df.calcs = df frame used for calculations.
df.calcs <- subset(df, select =- c(StateAbbr, PlaceName, PlaceFIPS, TractFIPS,Place_TractID,Population2010, ACCESS2_Crude95CI, ARTHRITIS_Crude95CI, BINGE_Crude95CI, BPHIGH_Crude95CI, BPMED_Crude95CI, CANCER_Crude95CI, CASTHMA_Crude95CI, CHD_Crude95CI, CHECKUP_Crude95CI, CHOLSCREEN_Crude95CI, COLON_SCREEN_Crude95CI,COPD_Crude95CI, COREM_Crude95CI, COREW_Crude95CI, CSMOKING_Crude95CI, DENTAL_Crude95CI,DIABETES_Crude95CI,  HIGHCHOL_Crude95CI, KIDNEY_Crude95CI, LPA_Crude95CI, MAMMOUSE_Crude95CI, MHLTH_Crude95CI, OBESITY_Crude95CI, PAPTEST_Crude95CI, PHLTH_Crude95CI, SLEEP_Crude95CI, STROKE_Crude95CI, TEETHLOST_Crude95CI, Geolocation))
head(df.calcs)
#narrowing the factors to only be unhealthy habits and preventative measures
df.unhealthy.precitors <- df.calcs <- subset(df.calcs, select =- c(ARTHRITIS_CrudePrev, BPHIGH_CrudePrev, CASTHMA_CrudePrev, CHD_CrudePrev, COPD_CrudePrev, DIABETES_CrudePrev, HIGHCHOL_CrudePrev, KIDNEY_CrudePrev, MAMMOUSE_CrudePrev, MHLTH_CrudePrev, PHLTH_CrudePrev, STROKE_CrudePrev))
head(df.unhealthy.precitors)
#narrowing the dataset even further to just predictive variables
cancer.pred.only <- subset(df.unhealthy.precitors,  select =- c(BINGE_CrudePrev, CSMOKING_CrudePrev, LPA_CrudePrev, OBESITY_CrudePrev, SLEEP_CrudePrev))
head(cancer.pred.only)
cancer.lm <- lm(CANCER_CrudePrev ~ ., data = cancer.pred.only)
summary(cancer.lm)
#removing ACCESS2_CrudePrev since not statistically significant
cancer.reduced <- lm(CANCER_CrudePrev ~ BPMED_CrudePrev + CHECKUP_CrudePrev + CHOLSCREEN_CrudePrev + COLON_SCREEN_CrudePrev + COREM_CrudePrev + COREW_CrudePrev  + DENTAL_CrudePrev + PAPTEST_CrudePrev + TEETHLOST_CrudePrev, data = df.unhealthy.precitors)
summary(cancer.reduced)
anova(cancer.lm, cancer.reduced)
cancer.interactions <- lm(CANCER_CrudePrev ~ (BPMED_CrudePrev + CHECKUP_CrudePrev + CHOLSCREEN_CrudePrev + COLON_SCREEN_CrudePrev + COREM_CrudePrev + COREW_CrudePrev  + DENTAL_CrudePrev + PAPTEST_CrudePrev + TEETHLOST_CrudePrev)^2, data = df.unhealthy.precitors)
summary(cancer.interactions)
model_step <- step(cancer.pred.only.interactions, direction = "both")
summary(model_step)
summary(model_step)
formula(model_step)
as.formula(
paste0("y ~ ", round(coefficients(model_step)[1],2), "",
paste(sprintf(" %+.2f*%s ",
coefficients(model_step)[-1],
names(coefficients(model_step)[-1])),
collapse="")
)
)
rounded_coefficients <- round(coefficients(model_step), 6)  # Round coefficients to 6 digits
# Construct the formula with rounded coefficients
formula_str <- paste0("y ~ ",
round(rounded_coefficients[1], 6),
"",
paste(sprintf(" %+.6f*%s ",
rounded_coefficients[-1],
names(rounded_coefficients[-1])),
collapse="")
)
# Convert the formula string into a formula object
formula_with_rounded_coefficients <- as.formula(formula_str)
# Print the formula
print(formula_with_rounded_coefficients)
summary(model_step)
#linearity assumption
library(ggplot2)
ggplot(model_step, aes(x=.fitted, y=.resid)) +
geom_point() + geom_smooth()+
geom_hline(yintercept = 0)
plot(model_step)
library(MASS)
bc = boxcox(model_step,lambda=seq(-1,1))
plot(cancer.reduced)
plot(cancer.reduced)
?VIF
VIF(lm(CANCER_CrudePrev ~ BPMED_CrudePrev + CHECKUP_CrudePrev + CHOLSCREEN_CrudePrev + COLON_SCREEN_CrudePrev + COREM_CrudePrev + COREW_CrudePrev  + DENTAL_CrudePrev + PAPTEST_CrudePrev + TEETHLOST_CrudePrev, data = df.unhealthy.precitors))
pairs(cancer.reduced)
pairs(cancer.pred.only)
model_step <- step(cancer.pred.only.interactions, direction = "both")
summary(model_step)
library(MASS)
bc = boxcox(model_step,lambda=seq(-1,1))
bc
summary(bc)
?boxcox
which.max(boxcox(bc^y))
which.max(boxcox(bc$y))
which.max((bc$y))
bc$x[which.max((bc$y))]
lambda = bc$x[which.max((bc$y))]
cancer.pred.only %>%
mutate(CANCER_boxcox = (CANCER_CrudePrev^lambda - 1)/lambda)
cancer.pred.new = cancer.pred.only %>%
mutate(CANCER_boxcox = (CANCER_CrudePrev^lambda - 1)/lambda)
library(MASS)
bc = boxcox(model_step,lambda=seq(-1,1))
cancer.pred.new = cancer.pred.only %>%
mutate(CANCER_boxcox = (CANCER_CrudePrev^lambda - 1)/lambda)
head(cancer.pred.new)
lm(formula = CANCER_boxcox ~ BPMED_CrudePrev + CHECKUP_CrudePrev +
CHOLSCREEN_CrudePrev + COLON_SCREEN_CrudePrev + COREM_CrudePrev +
COREW_CrudePrev + DENTAL_CrudePrev + PAPTEST_CrudePrev +
TEETHLOST_CrudePrev + BPMED_CrudePrev:CHECKUP_CrudePrev +
BPMED_CrudePrev:CHOLSCREEN_CrudePrev + BPMED_CrudePrev:COLON_SCREEN_CrudePrev +
BPMED_CrudePrev:COREM_CrudePrev + BPMED_CrudePrev:COREW_CrudePrev +
BPMED_CrudePrev:PAPTEST_CrudePrev + BPMED_CrudePrev:TEETHLOST_CrudePrev +
CHECKUP_CrudePrev:CHOLSCREEN_CrudePrev + CHECKUP_CrudePrev:COLON_SCREEN_CrudePrev +
CHECKUP_CrudePrev:COREM_CrudePrev + CHECKUP_CrudePrev:DENTAL_CrudePrev +
CHECKUP_CrudePrev:PAPTEST_CrudePrev + CHECKUP_CrudePrev:TEETHLOST_CrudePrev +
CHOLSCREEN_CrudePrev:COLON_SCREEN_CrudePrev + CHOLSCREEN_CrudePrev:COREM_CrudePrev +
CHOLSCREEN_CrudePrev:COREW_CrudePrev + CHOLSCREEN_CrudePrev:DENTAL_CrudePrev +
CHOLSCREEN_CrudePrev:PAPTEST_CrudePrev + CHOLSCREEN_CrudePrev:TEETHLOST_CrudePrev +
COLON_SCREEN_CrudePrev:COREW_CrudePrev + COLON_SCREEN_CrudePrev:DENTAL_CrudePrev +
COLON_SCREEN_CrudePrev:PAPTEST_CrudePrev + COLON_SCREEN_CrudePrev:TEETHLOST_CrudePrev +
COREM_CrudePrev:COREW_CrudePrev + COREM_CrudePrev:DENTAL_CrudePrev +
COREM_CrudePrev:PAPTEST_CrudePrev + COREW_CrudePrev:DENTAL_CrudePrev +
COREW_CrudePrev:PAPTEST_CrudePrev + COREW_CrudePrev:TEETHLOST_CrudePrev +
DENTAL_CrudePrev:PAPTEST_CrudePrev + DENTAL_CrudePrev:TEETHLOST_CrudePrev +
PAPTEST_CrudePrev:TEETHLOST_CrudePrev, data = cancer.pred.new)
new = lm(formula = CANCER_boxcox ~ BPMED_CrudePrev + CHECKUP_CrudePrev +
CHOLSCREEN_CrudePrev + COLON_SCREEN_CrudePrev + COREM_CrudePrev +
COREW_CrudePrev + DENTAL_CrudePrev + PAPTEST_CrudePrev +
TEETHLOST_CrudePrev + BPMED_CrudePrev:CHECKUP_CrudePrev +
BPMED_CrudePrev:CHOLSCREEN_CrudePrev + BPMED_CrudePrev:COLON_SCREEN_CrudePrev +
BPMED_CrudePrev:COREM_CrudePrev + BPMED_CrudePrev:COREW_CrudePrev +
BPMED_CrudePrev:PAPTEST_CrudePrev + BPMED_CrudePrev:TEETHLOST_CrudePrev +
CHECKUP_CrudePrev:CHOLSCREEN_CrudePrev + CHECKUP_CrudePrev:COLON_SCREEN_CrudePrev +
CHECKUP_CrudePrev:COREM_CrudePrev + CHECKUP_CrudePrev:DENTAL_CrudePrev +
CHECKUP_CrudePrev:PAPTEST_CrudePrev + CHECKUP_CrudePrev:TEETHLOST_CrudePrev +
CHOLSCREEN_CrudePrev:COLON_SCREEN_CrudePrev + CHOLSCREEN_CrudePrev:COREM_CrudePrev +
CHOLSCREEN_CrudePrev:COREW_CrudePrev + CHOLSCREEN_CrudePrev:DENTAL_CrudePrev +
CHOLSCREEN_CrudePrev:PAPTEST_CrudePrev + CHOLSCREEN_CrudePrev:TEETHLOST_CrudePrev +
COLON_SCREEN_CrudePrev:COREW_CrudePrev + COLON_SCREEN_CrudePrev:DENTAL_CrudePrev +
COLON_SCREEN_CrudePrev:PAPTEST_CrudePrev + COLON_SCREEN_CrudePrev:TEETHLOST_CrudePrev +
COREM_CrudePrev:COREW_CrudePrev + COREM_CrudePrev:DENTAL_CrudePrev +
COREM_CrudePrev:PAPTEST_CrudePrev + COREW_CrudePrev:DENTAL_CrudePrev +
COREW_CrudePrev:PAPTEST_CrudePrev + COREW_CrudePrev:TEETHLOST_CrudePrev +
DENTAL_CrudePrev:PAPTEST_CrudePrev + DENTAL_CrudePrev:TEETHLOST_CrudePrev +
PAPTEST_CrudePrev:TEETHLOST_CrudePrev, data = cancer.pred.new)
plot(new)
library(car)
library(lmtest)
library(GGally)
library(olsrr)
library(MASS)
library(dplyr)
#read in original csv file and remove na values
LE = read.csv("https://raw.githubusercontent.com/ethan2411/Data-603-604/main/Life%20Expectancy%20Data.csv")
LE = na.omit(LE)
head(LE)
#select for "developing" rows based on Status column
developing_LE <- LE %>%
filter(Status == "Developing")
nrow(LE)
nrow(developing_LE)
head(developing_LE)
#make first model
develop_firstlm = lm(Life.expectancy ~  Alcohol + Hepatitis.B  + Measles + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE)
summary(develop_firstlm)
#check vif for multicolinnearity to see if we need to drop any variables
vif(develop_firstlm)
#we dont need to drop any so we now reduce model
#reduce model via t-test
develop_lmred = lm(Life.expectancy ~  Alcohol + Hepatitis.B + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE)
summary(develop_lmred)
#check if reduced model is accepted (it is) via partial f test
anova(develop_firstlm,develop_lmred)
#make full interaction model
develop_lmintfull = lm(Life.expectancy ~  (Alcohol + Hepatitis.B + BMI + Polio + Diphtheria + HIV.AIDS)^2, data = developing_LE)
summary(develop_lmintfull)
#reduce interaction model via ols stepwise because there are too many interactions to do it manually
develop_stepmod_intred = ols_step_both_p(develop_lmintfull, pent= 0.1, prem = 0.3, details = FALSE)
summary(develop_stepmod_intred$model)
#code in the reduced interaction model from stepwise
developing_intred2 = lm(Life.expectancy ~ HIV.AIDS + Hepatitis.B + BMI + Alcohol + Polio + Diphtheria + Polio:Diphtheria +BMI:Polio + Hepatitis.B:Alcohol + HIV.AIDS:Alcohol + Diphtheria:Alcohol +  Hepatitis.B:Polio + HIV.AIDS:Diphtheria, data = developing_LE)
#look for graphs to see if higher order models are required
#ggpairs(developing_intred2)
developing_highermod = lm(Life.expectancy ~ HIV.AIDS + I(HIV.AIDS^2) + Hepatitis.B + BMI + Alcohol + Polio + Diphtheria + Polio:Diphtheria +BMI:Polio + Hepatitis.B:Alcohol + HIV.AIDS:Alcohol + Diphtheria:Alcohol +  Hepatitis.B:Polio + HIV.AIDS:Diphtheria, data = developing_LE)
summary(developing_highermod)
#ANOVA TO TEST IF HIGHER ORDER MODEL IS ACCEPTED. IT IS ACCEPTED
anova(developing_highermod, developing_intred2)
#CHECK ASSUMPTIONS OF OUR FINAL MODEL
summary(developing_highermod)
#equal variance assumption
bptest(developing_highermod)
#normality assumption
shapiro.test(residuals(developing_highermod))
#plots to show linearity, equal variance, normality and outlier assumptions
plot(developing_highermod)
#more plots to show the outlier assumption
lev=hatvalues(developing_highermod)
p = length(coef(developing_highermod))
n = nrow(developing_LE)
par(mfrow = c(1,2))
plot(developing_highermod, which = 4)
plot(rownames(developing_LE),lev, main = "Leverage in Dataset", xlab="observation",
ylab = "Leverage Value")
abline(h = 2 *p/n, lty = 1)
abline(h = 3 *p/n, lty = 1)
#more plots to show the linearity, equal variance and outliers assumptions
# Residuals vs Fitted Values Plot
ggplot(data.frame(residuals = residuals(developing_highermod), fitted = fitted(developing_highermod)), aes(x = fitted, y = residuals)) +
geom_point() +
geom_smooth(method = "loess", se = TRUE, color = "red") +
labs(title = "Residuals vs Fitted",
x = "Fitted Values",
y = "Residuals")
# Scale-Location (Spread-Location) Plot
ggplot(data.frame(fitted = fitted(developing_highermod), std_resid = sqrt(abs(rstandard(developing_highermod)))), aes(x = fitted, y = std_resid)) +
geom_point() +
geom_smooth(method = "loess", se = TRUE, color = "red") +
labs(title = "Scale-Location Plot",
x = "Fitted Values",
y = "Square Root of Standardized Residuals")
# Residuals vs Leverage Plot
ggplot(data.frame(hat_values = hatvalues(developing_highermod), std_resid = rstandard(developing_highermod)), aes(x = hat_values, y = std_resid)) +
geom_point() +
geom_smooth(method = "loess", se = TRUE, color = "red") +
labs(title = "Residuals vs Leverage",
x = "Leverage",
y = "Standardized Residuals")
library(patchwork)
# Normal Q-Q Plot
qq_plot <- ggplot(data.frame(std_resid = rstandard(developing_highermod)), aes(sample = std_resid)) +
geom_qq() +
geom_qq_line() +
labs(title = "Normal Q-Q Plot")
# Histogram of Residuals
hist_plot <- ggplot(data = developing_highermod, aes(x = developing_highermod$residuals)) +
geom_histogram(binwidth = 0.5, fill = 'blue', col = 'red') +
labs(title = "Histogram of Residuals")+
xlab("Residuals") +
ylab("Count")
# Combine plots using patchwork
combined_plot <- qq_plot + hist_plot
# Display the combined plot
combined_plot
bc = boxcox(developing_highermod, lambda=seq(-1,1))
bestlambda = bc$x[which(bc$y==max(bc$y))]
bestlambda
lev=hatvalues(developing_highermod)
p = length(coef(developing_highermod))
n = nrow(developing_LE)
outlier3p = lev[lev>(3*p/n)]
print("h_I>3p/n, outliers are")
print(outlier3p)
rows_remove3p = which(lev>(3*p/n))
print(rows_remove3p)
developing_LE_no_outliersSTEP = developing_LE[-rows_remove3p, ]
head(developing_LE_no_outliersSTEP)
nrow(developing_LE)
nrow(developing_LE_no_outliersSTEP)
#make initial model without 3p/n outliers
first3plm= lm(Life.expectancy ~  Alcohol + Hepatitis.B  + Measles + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE_no_outliersSTEP)
summary(first3plm)
#reduced model
red3plm = lm(Life.expectancy ~  Alcohol + Hepatitis.B + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE_no_outliersSTEP)
summary(red3plm)
#anova accepts the reduced model
anova(first3plm, red3plm)
#int model
int3plm = lm(Life.expectancy ~  (Alcohol + Hepatitis.B + BMI + Polio + Diphtheria + HIV.AIDS)^2, data = developing_LE_no_outliersSTEP)
summary(int3plm)
#anova accepts the interaction model
anova(int3plm, red3plm)
intred3plm = ols_step_both_p(int3plm, pent = 0.1, prem = 0.3, details = FALSE)
summary(intred3plm$model)
#MAKING REDUCED INT MODEL AFTER STEPWISE
step_red_3p = lm(Life.expectancy ~  HIV.AIDS + Hepatitis.B + Polio + Diphtheria + Alcohol + BMI + BMI:Diphtheria + Diphtheria:Polio + Hepatitis.B:Alcohol + Diphtheria:Alcohol + BMI:Hepatitis.B + BMI:Polio + HIV.AIDS:Polio + Diphtheria:Hepatitis.B, data = developing_LE_no_outliersSTEP)
#CHECK GGPAIRS TO SEE IF WE ADD HIGHER ORDER TO MODEL
#ggpairs(step_red_3p)
#LOOKS LIKE WE DO IT FOR HIV
#make higher order model
higher3plm = lm(Life.expectancy ~ HIV.AIDS + I(HIV.AIDS^2) + Hepatitis.B + Polio + Diphtheria + Alcohol + BMI + BMI:Diphtheria + Diphtheria:Polio + Hepatitis.B:Alcohol + Diphtheria:Alcohol + BMI:Hepatitis.B + BMI:Polio + HIV.AIDS:Polio + Diphtheria:Hepatitis.B, data = developing_LE_no_outliersSTEP)
#stopped at 2. Dont want to create an overfitted model.
#anova accepts higher order model
anova(higher3plm,step_red_3p)
#quick check of assumptions for model without 3p/n outliers
summary(higher3plm)
#equal variance assumption
bptest(higher3plm)
#normality assumption
shapiro.test(residuals(higher3plm))
#check linearity, equal variance, normality and outlier assumptions via plots
plot(higher3plm)
lev=hatvalues(developing_highermod)
p = length(coef(developing_highermod))
n = nrow(developing_LE)
outlier2p = lev[lev>(2*p/n)]
print("h_I>2p/n, outliers are")
print(outlier2p)
rows_remove2p = which(lev>(2*p/n))
print(rows_remove2p)
developing_LE_no_outliersSTEP2P = developing_LE[-rows_remove2p, ]
head(developing_LE_no_outliersSTEP2P)
nrow(developing_LE)
nrow(developing_LE_no_outliersSTEP2P)
first2plm= lm(Life.expectancy ~  Alcohol + Hepatitis.B  + Measles + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE_no_outliersSTEP2P)
summary(first2plm)
#everything signficiant, so no reductions. make int model next
#int model
int2plm = lm(Life.expectancy ~  (Alcohol + Hepatitis.B  + Measles + BMI + Polio + Diphtheria + HIV.AIDS)^2, data = developing_LE_no_outliersSTEP2P)
summary(int2plm)
#reduced int model via stepwise
intred2plm = ols_step_both_p(int2plm, pent = 0.1, prem = 0.3, details = FALSE)
summary(intred2plm$model)
#MAKE NEW MODEL HERE AFTER DOING STEPWISE OLS
step_red_2p = lm(Life.expectancy ~  Alcohol + Hepatitis.B  + Measles + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE_no_outliersSTEP2P)
#ggpairs(intred2plm)
#make higher order model
higher2plm = lm(Life.expectancy ~ Alcohol + Hepatitis.B + Measles + BMI + Diphtheria + HIV.AIDS + I(HIV.AIDS^2) + Alcohol:Hepatitis.B + Alcohol:Measles + Alcohol:BMI + Alcohol:Diphtheria + Alcohol:HIV.AIDS + Hepatitis.B:Diphtheria + Measles:Diphtheria + Measles:HIV.AIDS + BMI:Diphtheria + Diphtheria:HIV.AIDS, data = developing_LE_no_outliersSTEP2P)
summary(higher2plm)
bptest(higher2plm)
plot(higher2plm)
shapiro.test(residuals(higher2plm))
#boxcox
bc = boxcox(higher2plm,lambda=seq(-1,1))
bestlambda=bc$x[which(bc$y==max(bc$y))]
bestlambda
library(car)
library(lmtest)
library(GGally)
library(olsrr)
library(MASS)
library(dplyr)
#read in original csv file and remove na values
LE = read.csv("https://raw.githubusercontent.com/ethan2411/Data-603-604/main/Life%20Expectancy%20Data.csv")
LE = na.omit(LE)
head(LE)
#select for "developing" rows based on Status column
developing_LE <- LE %>%
filter(Status == "Developing")
nrow(LE)
nrow(developing_LE)
head(developing_LE)
options(scipen = 999)
#make first model
develop_firstlm = lm(Life.expectancy ~  Alcohol + Hepatitis.B  + Measles + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE)
summary(develop_firstlm)
#check vif for multicolinnearity to see if we need to drop any variables
vif(develop_firstlm)
#we dont need to drop any so we now reduce model
#reduce model via t-test
develop_lmred = lm(Life.expectancy ~  Alcohol + Hepatitis.B + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE)
summary(develop_lmred)
#check if reduced model is accepted (it is) via partial f test
anova(develop_firstlm,develop_lmred)
#make full interaction model
develop_lmintfull = lm(Life.expectancy ~  (Alcohol + Hepatitis.B + BMI + Polio + Diphtheria + HIV.AIDS)^2, data = developing_LE)
summary(develop_lmintfull)
#reduce interaction model via ols stepwise because there are too many interactions to do it manually
develop_stepmod_intred = ols_step_both_p(develop_lmintfull, pent= 0.1, prem = 0.3, details = FALSE)
summary(develop_stepmod_intred$model)
#code in the reduced interaction model from stepwise
developing_intred2 = lm(Life.expectancy ~ HIV.AIDS + Hepatitis.B + BMI + Alcohol + Polio + Diphtheria + Polio:Diphtheria +BMI:Polio + Hepatitis.B:Alcohol + HIV.AIDS:Alcohol + Diphtheria:Alcohol +  Hepatitis.B:Polio + HIV.AIDS:Diphtheria, data = developing_LE)
#look for graphs to see if higher order models are required
#ggpairs(developing_intred2)
developing_highermod = lm(Life.expectancy ~ HIV.AIDS + I(HIV.AIDS^2) + Hepatitis.B + BMI + Alcohol + Polio + Diphtheria + Polio:Diphtheria +BMI:Polio + Hepatitis.B:Alcohol + HIV.AIDS:Alcohol + Diphtheria:Alcohol +  Hepatitis.B:Polio + HIV.AIDS:Diphtheria, data = developing_LE)
summary(developing_highermod)
#ANOVA TO TEST IF HIGHER ORDER MODEL IS ACCEPTED. IT IS ACCEPTED
anova(developing_highermod, developing_intred2)
#CHECK ASSUMPTIONS OF OUR FINAL MODEL
summary(developing_highermod)
#equal variance assumption
bptest(developing_highermod)
#normality assumption
shapiro.test(residuals(developing_highermod))
#plots to show linearity, equal variance, normality and outlier assumptions
plot(developing_highermod)
#more plots to show the outlier assumption
lev=hatvalues(developing_highermod)
p = length(coef(developing_highermod))
n = nrow(developing_LE)
par(mfrow = c(1,2))
plot(developing_highermod, which = 4)
plot(rownames(developing_LE),lev, main = "Leverage in Dataset", xlab="observation",
ylab = "Leverage Value")
abline(h = 2 *p/n, lty = 1)
abline(h = 3 *p/n, lty = 1)
#more plots to show the linearity, equal variance and outliers assumptions
# Residuals vs Fitted Values Plot
ggplot(data.frame(residuals = residuals(developing_highermod), fitted = fitted(developing_highermod)), aes(x = fitted, y = residuals)) +
geom_point() +
geom_smooth(method = "loess", se = TRUE, color = "red") +
labs(title = "Residuals vs Fitted",
x = "Fitted Values",
y = "Residuals")
# Scale-Location (Spread-Location) Plot
ggplot(data.frame(fitted = fitted(developing_highermod), std_resid = sqrt(abs(rstandard(developing_highermod)))), aes(x = fitted, y = std_resid)) +
geom_point() +
geom_smooth(method = "loess", se = TRUE, color = "red") +
labs(title = "Scale-Location Plot",
x = "Fitted Values",
y = "Square Root of Standardized Residuals")
# Residuals vs Leverage Plot
ggplot(data.frame(hat_values = hatvalues(developing_highermod), std_resid = rstandard(developing_highermod)), aes(x = hat_values, y = std_resid)) +
geom_point() +
geom_smooth(method = "loess", se = TRUE, color = "red") +
labs(title = "Residuals vs Leverage",
x = "Leverage",
y = "Standardized Residuals")
library(patchwork)
# Normal Q-Q Plot
qq_plot <- ggplot(data.frame(std_resid = rstandard(developing_highermod)), aes(sample = std_resid)) +
geom_qq() +
geom_qq_line() +
labs(title = "Normal Q-Q Plot")
# Histogram of Residuals
hist_plot <- ggplot(data = developing_highermod, aes(x = developing_highermod$residuals)) +
geom_histogram(binwidth = 0.5, fill = 'blue', col = 'red') +
labs(title = "Histogram of Residuals")+
xlab("Residuals") +
ylab("Count")
# Combine plots using patchwork
combined_plot <- qq_plot + hist_plot
# Display the combined plot
combined_plot
bc = boxcox(developing_highermod, lambda=seq(-1,1))
bestlambda = bc$x[which(bc$y==max(bc$y))]
bestlambda
lev=hatvalues(developing_highermod)
p = length(coef(developing_highermod))
n = nrow(developing_LE)
outlier3p = lev[lev>(3*p/n)]
print("h_I>3p/n, outliers are")
print(outlier3p)
rows_remove3p = which(lev>(3*p/n))
print(rows_remove3p)
developing_LE_no_outliersSTEP = developing_LE[-rows_remove3p, ]
head(developing_LE_no_outliersSTEP)
nrow(developing_LE)
nrow(developing_LE_no_outliersSTEP)
#make initial model without 3p/n outliers
first3plm= lm(Life.expectancy ~  Alcohol + Hepatitis.B  + Measles + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE_no_outliersSTEP)
summary(first3plm)
#reduced model
red3plm = lm(Life.expectancy ~  Alcohol + Hepatitis.B + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE_no_outliersSTEP)
summary(red3plm)
#anova accepts the reduced model
anova(first3plm, red3plm)
#int model
int3plm = lm(Life.expectancy ~  (Alcohol + Hepatitis.B + BMI + Polio + Diphtheria + HIV.AIDS)^2, data = developing_LE_no_outliersSTEP)
summary(int3plm)
#anova accepts the interaction model
anova(int3plm, red3plm)
intred3plm = ols_step_both_p(int3plm, pent = 0.1, prem = 0.3, details = FALSE)
summary(intred3plm$model)
#MAKING REDUCED INT MODEL AFTER STEPWISE
step_red_3p = lm(Life.expectancy ~  HIV.AIDS + Hepatitis.B + Polio + Diphtheria + Alcohol + BMI + BMI:Diphtheria + Diphtheria:Polio + Hepatitis.B:Alcohol + Diphtheria:Alcohol + BMI:Hepatitis.B + BMI:Polio + HIV.AIDS:Polio + Diphtheria:Hepatitis.B, data = developing_LE_no_outliersSTEP)
#CHECK GGPAIRS TO SEE IF WE ADD HIGHER ORDER TO MODEL
#ggpairs(step_red_3p)
#LOOKS LIKE WE DO IT FOR HIV
#make higher order model
higher3plm = lm(Life.expectancy ~ HIV.AIDS + I(HIV.AIDS^2) + Hepatitis.B + Polio + Diphtheria + Alcohol + BMI + BMI:Diphtheria + Diphtheria:Polio + Hepatitis.B:Alcohol + Diphtheria:Alcohol + BMI:Hepatitis.B + BMI:Polio + HIV.AIDS:Polio + Diphtheria:Hepatitis.B, data = developing_LE_no_outliersSTEP)
#stopped at 2. Dont want to create an overfitted model.
#anova accepts higher order model
anova(higher3plm,step_red_3p)
#quick check of assumptions for model without 3p/n outliers
summary(higher3plm)
#equal variance assumption
bptest(higher3plm)
#normality assumption
shapiro.test(residuals(higher3plm))
#check linearity, equal variance, normality and outlier assumptions via plots
plot(higher3plm)
lev=hatvalues(developing_highermod)
p = length(coef(developing_highermod))
n = nrow(developing_LE)
outlier2p = lev[lev>(2*p/n)]
print("h_I>2p/n, outliers are")
print(outlier2p)
rows_remove2p = which(lev>(2*p/n))
print(rows_remove2p)
developing_LE_no_outliersSTEP2P = developing_LE[-rows_remove2p, ]
head(developing_LE_no_outliersSTEP2P)
nrow(developing_LE)
nrow(developing_LE_no_outliersSTEP2P)
first2plm= lm(Life.expectancy ~  Alcohol + Hepatitis.B  + Measles + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE_no_outliersSTEP2P)
summary(first2plm)
#everything signficiant, so no reductions. make int model next
#int model
int2plm = lm(Life.expectancy ~  (Alcohol + Hepatitis.B  + Measles + BMI + Polio + Diphtheria + HIV.AIDS)^2, data = developing_LE_no_outliersSTEP2P)
summary(int2plm)
#reduced int model via stepwise
intred2plm = ols_step_both_p(int2plm, pent = 0.1, prem = 0.3, details = FALSE)
summary(intred2plm$model)
#MAKE NEW MODEL HERE AFTER DOING STEPWISE OLS
step_red_2p = lm(Life.expectancy ~  Alcohol + Hepatitis.B  + Measles + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE_no_outliersSTEP2P)
#ggpairs(intred2plm)
#make higher order model
higher2plm = lm(Life.expectancy ~ Alcohol + Hepatitis.B + Measles + BMI + Diphtheria + HIV.AIDS + I(HIV.AIDS^2) + Alcohol:Hepatitis.B + Alcohol:Measles + Alcohol:BMI + Alcohol:Diphtheria + Alcohol:HIV.AIDS + Hepatitis.B:Diphtheria + Measles:Diphtheria + Measles:HIV.AIDS + BMI:Diphtheria + Diphtheria:HIV.AIDS, data = developing_LE_no_outliersSTEP2P)
summary(higher2plm)
bptest(higher2plm)
plot(higher2plm)
shapiro.test(residuals(higher2plm))
#boxcox
bc = boxcox(higher2plm,lambda=seq(-1,1))
bestlambda=bc$x[which(bc$y==max(bc$y))]
bestlambda
options(scipen = 999)
#make first model
develop_firstlm = lm(Life.expectancy ~  Alcohol + Hepatitis.B  + Measles + BMI + Polio + Diphtheria + HIV.AIDS, data = developing_LE)
summary(develop_firstlm)
#reduce interaction model via ols stepwise because there are too many interactions to do it manually
develop_stepmod_intred = ols_step_both_p(develop_lmintfull, pent= 0.1, prem = 0.3, details = FALSE)
summary(develop_stepmod_intred$model)
developing_highermod = lm(Life.expectancy ~ HIV.AIDS + I(HIV.AIDS^2) + Hepatitis.B + BMI + Alcohol + Polio + Diphtheria + Polio:Diphtheria +BMI:Polio + Hepatitis.B:Alcohol + HIV.AIDS:Alcohol + Diphtheria:Alcohol +  Hepatitis.B:Polio + HIV.AIDS:Diphtheria, data = developing_LE)
summary(developing_highermod)
#ANOVA TO TEST IF HIGHER ORDER MODEL IS ACCEPTED. IT IS ACCEPTED
anova(developing_highermod, developing_intred2)
